# unit_move_interface.crpl
# Created on: 1/30/2015 11:17:15 AM
# ------------------------------------------

# Interface Unit Move (IA)

$CRPL_INIT:0
$CRPL_RUNNING:1
$CRPL_INTERFACE:"unit_move_interface"
$CRPL_SCRIPT_NAME:"unit.crpl"


#Is Unit Move IA active or not ?
$move_statut:1
#elevation:(0 -> forbidden 1 -> allowed)
$move_elevation:"0:0 1:1 2:0 3:0 4:0 5:0 6:0 7:0 8:0 9:0 10:0" 
#0: ignore elevation 1: check elevation
$move_elevation_mode:1 
#Move interval in frame
$move_interval:1

$move_line:1

$move_line_rand:1

once
	OperateWhilePaused(false)
	@get_elevation ->elevation_list
	@move_clear
	@direction_4_init
	@direction_8_init
	@direction_return_init
	0 ->direction
	1 ->clear
	-1 ->direction_return
endonce

if(<-CRPL_INIT)
	@interface_start
endif

if(<-CRPL_RUNNING)
	if(<-move_statut)
		0 ->clear
		if(@check_nullifier eq0)
			@move
		endif		
	else
		if(<-clear eq0)
			@move_clear
		else
			1 ->clear
		endif
	endif
endif

:interface_start


:move
if(GetQueuedMoveCount eq0)
	if(<-move_elevation_mode eq0)
		#mode 0 ignore elevation
		QueueMove(<-destinationX <-destinationY 1)
	endif
	if(<-move_elevation_mode eq(1))
		#mode 1 check elevation
		@move_available_direction
		QueueMove(@move_choose 1)
	endif
endif

:direction_change
<-direction ->direction_old
if(<-direction lte(6))
	<-direction add(1) ->direction
else
	0 ->direction
endif
<-direction_old

:direction_return_init
CreateListStartingSize(4) ->direction_return_liste
SetListElement(<-direction_return_liste 0 2)
SetListElement(<-direction_return_liste 1 3)
SetListElement(<-direction_return_liste 2 0)
SetListElement(<-direction_return_liste 3 1)


:direction_4_init
CreateListStartingSize(4) ->direction_4_list
SetListElement(<-direction_4_list 0 "0 -1")
SetListElement(<-direction_4_list 1 "1 0")
SetListElement(<-direction_4_list 2 "0 1")
SetListElement(<-direction_4_list 3 "-1 0")

:direction_8_init
CreateListStartingSize(8) ->direction_8_list
SetListElement(<-direction_8_list 0 "0 -1")
SetListElement(<-direction_8_list 1 "1 -1")
SetListElement(<-direction_8_list 2 "1 0")
SetListElement(<-direction_8_list 3 "1 1")
SetListElement(<-direction_8_list 4 "0 1")
SetListElement(<-direction_8_list 5 "-1 1")
SetListElement(<-direction_8_list 6 "-1 0")
SetListElement(<-direction_8_list 7 "-1 -1")

:move_choose
if(GetListCount(<-direction_available) eq(1))
	GetListElement(<-direction_available 0) ->direction_index
else
	if(GetListCount(<-direction_available) eq(3))
		if(<-move_line)
			GetListElement(<-direction_4_list <-direction_index) ->direction_current
		else
			GetListElement(<-direction_available RandInt(0 GetListCount(<-direction_available))) ->direction_index
		endif
		if(<-move_line_rand)
			randint(0 2) ->move_line
		endif
	else
		GetListElement(<-direction_available RandInt(0 GetListCount(<-direction_available))) ->direction_index
	endif
endif
GetListElement(<-direction_4_list <-direction_index) ->direction_current	
GetListElement(<-direction_return_liste <-direction_index) ->direction_return
split(<-direction_current " ") ->direction_coord
CurrentX add(GetListElement(<-direction_coord 0)) ->direction_x
CurrentY add(GetListElement(<-direction_coord 1)) ->direction_y
<-direction_x <-direction_y

:move_available_direction
CreateList ->direction_available
do(4 0)
	GetListElement(<-direction_4_list I) ->direction_current
	split(<-direction_current " ") ->direction_coord
	CurrentX add(GetListElement(<-direction_coord 0)) ->direction_x
	CurrentY add(GetListElement(<-direction_coord 1)) ->direction_y
	GetTerrain(<-direction_x <-direction_y)  ->destination_elevation
	if(GetListElement(<-elevation_list <-destination_elevation))
		if(@same_elevation(<-direction_x <-direction_y <-destination_elevation))
			if(I neq(<-direction_return))
				AppendToList(<-direction_available I)
			endif
		endif
	endif
loop
if(GetListCount(<-direction_available) eq0)
	AppendToList(<-direction_available <-direction_return)
endif

:move_clear
if(GetQueuedMoveCount neq0)
	ClearQueuedMoves
endif
AbortMove

:get_elevation
split(<-move_elevation " ") ->elevation_list_temp
if(GetListCount(<-elevation_list_temp) eq(11))
	CreateListStartingSize(11) ->elevation_list
	do(11 0)
		split(GetListElement(<-elevation_list_temp I)  ":") ->item
		SetListElement(<-elevation_list GetListElement(<-item 0) GetListElement(<-item 1))
	loop
endif
<-elevation_list

:same_elevation
->elevation ->y ->x
1 ->statut
do(8 0)
	GetListElement(<-direction_8_list I) ->direction_current
	split(<-direction_current " ") ->direction_coord
	if(GetTerrain(<-x add(GetListElement(<-direction_coord 0)) <-y add(GetListElement(<-direction_coord 1))) neq (<-elevation))
		0 ->statut
		break
	endif
loop
<-statut

:check_nullifier
0 ->nullifier_statut
if(GetUnitAttribute(Self CONST_NULLIFIERDAMAGES))
	do(GetUnitsInRange(CurrentCoords 10) 0)
		->unit
		if(GetUnitType(<-unit) eq ("NULLIFIER"))
			1 ->nullifier_statut
			break
		endif	
	loop
endif
<-nullifier_statut
